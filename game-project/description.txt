/game-project
├── /assets
│   ├── /images           # Изображения (спрайты, текстуры, фоны)
│   ├── /spritesheets     # Спрайт-листы для анимаций (если есть)
│   ├── /audio            # Звуковые эффекты и музыка
│   └── /fonts            # Шрифты для текста в меню и интерфейсе
├── /data
│   ├── /monsters.json    # Данные о монстрах, их параметрах и поведении
│   ├── /items.json       # Данные о предметах (оружие, броня, зелья и т.д.)
│   ├── /levels.json      # Информация о уровнях, картах, шаблонах
│   └── /quests.json      # Данные о квестах, заданиях и их прогрессе
├── /src
│   ├── /core
│   │   ├── main.js       # Основной игровой цикл, инициализация
│   │   ├── game.js       # Основной класс игры, обработка событий
│   │   ├── input.js      # Обработка ввода пользователя
│   │   └── collision.js  # Логика коллизий (столкновения объектов)
│   ├── /map
│   │   ├── generator.js  # Логика генерации карт, включая масштабирование
│   │   ├── grid.js       # Управление сеткой карты (размещение объектов)
│   │   └── level.js      # Управление уровнями (переходы между уровнями)
│   ├── /entities
│   │   ├── player.js     # Логика игрока (передвижение, атаки)
│   │   ├── monster.js    # Логика монстров (AI, движение, атаки)
│   │   └── npc.js        # Логика NPC (неигровые персонажи)
│   ├── /ui
│   │   ├── menu.js       # Логика основного меню игры
│   │   ├── hud.js        # Отображение интерфейса (здоровье, манна и т.д.)
│   │   └── inventory.js  # Управление инвентарём и предметами
│   ├── /pixi
│   │   ├── scene.js      # Логика работы с главной сценой Pixi.js
│   │   ├── sprites.js    # Логика управления спрайтами, анимациями
│   │   └── graphics.js   # Логика рисования примитивов и объектов
│   ├── /utils
│   │   ├── helpers.js    # Вспомогательные функции (рандом, вычисления)
│   │   ├── timer.js      # Таймеры для анимаций и событий
│   │   └── save.js       # Логика сохранения/загрузки игры
├── /server
│   ├── /user-server.js   # Сервер для взаимодействия с пользователем (сессии, управление игроками)
│   ├── /data-server.js   # Сервер для хранения данных (сохранения, прогресс)
│   └── /websocket.js     # Логика WebSocket для связи клиента с сервером
├── /config
│   ├── settings.js       # Конфигурации (разрешения, параметры игры)
│   └── environment.js    # Среда (режим отладки, сервер и т.д.)
├── /tests
│   ├── /unit
│   │   └── game.test.js  # Юнит-тесты для логики игры
│   ├── /integration
│   │   └── map.test.js   # Интеграционные тесты для карт и уровней
│   └── /ui
│       └── menu.test.js  # Тесты интерфейса и меню
└── index.html            # Основной HTML файл
